<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0  http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>de.ssherlock</groupId>
    <artifactId>ssherlock</artifactId>
    <version>1.0</version>
    <name>software_sherlock</name>
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>

        <!-- (De-)Activate unit, integration, and system tests -->
        <skipUnitTests>false</skipUnitTests>
        <skipIntegrationTests>false</skipIntegrationTests>
        <skipSystemTests>false</skipSystemTests>

        <!-- Dependency versions -->
        <junit.version>5.10.1</junit.version>
        <spotbugs.version>4.8.1.0</spotbugs.version>
        <spotbugs-annotations.version>4.8.2</spotbugs-annotations.version>
        <maven-javadoc-plugin.version>3.4.1</maven-javadoc-plugin.version>
        <formatter.version>2.21.1</formatter.version>
        <faces.version>4.0.0</faces.version>
        <weld.version>5.1.2.Final</weld.version>
        <postgresql.version>42.6.0</postgresql.version>
        <bootstrap.version>5.3.2</bootstrap.version>
        <jakarta.mail.version>2.0.1</jakarta.mail.version>
        <webdrivermanager.version>5.6.2</webdrivermanager.version>
        <junit-jupiter.version>5.10.1</junit-jupiter.version>
        <junit-platform-suite-engine>1.10.1</junit-platform-suite-engine>
        <selenium.version>4.15.0</selenium.version>
        <guava.version>32.1.3-jre</guava.version>
        <cargo-maven3-plugin.version>1.10.11</cargo-maven3-plugin.version>
        <cargo-tomcat.version>1.10.11</cargo-tomcat.version>
        <embedded-postgres.version>2.0.5</embedded-postgres.version>
        <mockito.version>5.8.0</mockito.version>
        <maven-surefire-plugin.version>3.2.2</maven-surefire-plugin.version>
        <jacoco.version>0.8.11</jacoco.version>
        <maven-failsafe-plugin.version>3.2.2</maven-failsafe-plugin.version>
        <maven-war-plugin.version>3.4.0</maven-war-plugin.version>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <jsoup.version>1.17.1</jsoup.version>
        <jquery.version>3.7.1</jquery.version>
        <popperjs.version>1.12.9-1</popperjs.version>
        <fontawesome.version>6.5.1</fontawesome.version>
        <cargo-maven3-plugin.version>1.10.10</cargo-maven3-plugin.version>
        <exec-maven.version>3.1.1</exec-maven.version>
        <commons-io.version>2.15.1</commons-io.version>
    </properties>

    <dependencies>
        <dependency>
            <!-- Mojarra -->
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.faces</artifactId>
            <version>${faces.version}</version>
        </dependency>

        <!-- CDI -->
        <dependency>
            <groupId>org.jboss.weld.servlet</groupId>
            <artifactId>weld-servlet-shaded</artifactId>
            <version>${weld.version}</version>
        </dependency>

        <!-- JUnit for unit tests -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- JUnit test suite -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite-engine</artifactId>
            <version>${junit-platform-suite-engine}</version>
            <scope>test</scope>
        </dependency>

        <!-- CDI for integration tests -->
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core-impl</artifactId>
            <version>${weld.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Selenium for system tests -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Google Guava â€” necessary for Selenium -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- JDBC PostgreSQL Driver -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>

        <!-- Embedded PostgreSQL server -->
        <dependency>
            <groupId>io.zonky.test</groupId>
            <artifactId>embedded-postgres</artifactId>
            <version>${embedded-postgres.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Mockito -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Tomcat container -->
        <dependency>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-core-container-tomcat</artifactId>
            <version>${cargo-tomcat.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Bootstrap -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${bootstrap.version}</version>
        </dependency>

        <!-- Jakarta Mail API -->
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>jakarta.mail</artifactId>
            <version>${jakarta.mail.version}</version>
        </dependency>

        <!-- Webdrivermanager for system tests -->
        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <version>${webdrivermanager.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Spotbugs Annotations -->
        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
            <version>${spotbugs-annotations.version}</version>
        </dependency>

        <!-- jsoup HTML parser library -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
        </dependency>

        <!-- Jquery webjar -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>${jquery.version}</version>
        </dependency>

        <!-- PopperJS webjar -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>popper.js</artifactId>
            <version>${popperjs.version}</version>
        </dependency>

        <!-- Font Awesome webjar -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>font-awesome</artifactId>
            <version>${fontawesome.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec-maven.version}</version>
                <executions>
                    <execution>
                        <id>start-embedded-db</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>de.ssherlock.StartEmbeddedDatabase</mainClass>
                            <classpathScope>test</classpathScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
            </plugin>

            <plugin>
                <!-- Runs and builds the test reports of the unit tests -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skipTests>${skipUnitTests}</skipTests>
                            <!--suppress UnresolvedMavenProperty -->
                            <argLine>${surefireArgLine}</argLine>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs.version}</version>
                <configuration>
                    <failOnError>true</failOnError>
                    <includeTests>true</includeTests>
                    <excludeFilterFile>cicd/checks/spotbugs-exclude.xml</excludeFilterFile>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <show>protected</show>
                    <failOnError>true</failOnError>
                    <failOnWarnings>true</failOnWarnings>
                </configuration>
            </plugin>

            <plugin>
                <!-- Measures coverage of the unit tests -->
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <skip>${skipUnitTests}</skip>
                            <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>

                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>

                    <execution>
                        <!--
                        This phase will merge all the various reports from unit, integration, and system testing
                        into one aggregated report.
                        -->
                        <id>aggregate-reports</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>merge</goal>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}/coverage-reports/</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
                            <dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>integration-tests</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                    </resource>
                    <resource>
                        <directory>src/test/resources</directory>
                    </resource>
                    <resource>
                        <directory>src/main/webapp</directory>
                    </resource>
                </resources>

                <plugins>
                    <plugin>
                        <!-- The failsafe plugin does similar to surefire but for integration tests -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven-failsafe-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>integration-tests</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>**/*IT.java</include>
                                    </includes>

                                    <skipTests>${skipIntegrationTests}</skipTests>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <argLine>${failsafeIntegrationTestArgLine}</argLine>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <!-- Measure coverage for integration tests -->
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.version}</version>
                        <executions>
                            <execution>
                                <id>pre-integration-test</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <skip>${skipIntegrationTests}</skip>
                                    <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                                    <propertyName>failsafeIntegrationTestArgLine</propertyName>
                                </configuration>
                            </execution>

                            <execution>
                                <id>post-integration-test</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <skip>${skipIntegrationTests}</skip>
                                    <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>system-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <!-- The failsafe plugin does similar to surefire but for system tests -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven-failsafe-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>system-tests</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>**/*UITest.java</include>
                                    </includes>

                                    <skipTests>${skipSystemTests}</skipTests>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <argLine>${failsafeSystemTestArgLine}</argLine>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven3-plugin</artifactId>
                        <version>${cargo-maven3-plugin.version}</version>
                        <configuration>
                            <container>
                                <containerId>tomcat10x</containerId>
                                <zipUrlInstaller>
                                    <url>https://downloads.apache.org/tomcat/tomcat-10/v10.1.18/bin/apache-tomcat-10.1.18.zip</url>
                                </zipUrlInstaller>
                            </container>
                            <deployables>
                                <deployable>
                                    <location>${project.build.directory}/ssherlock-system_test.war</location>
                                    <type>war</type>
                                </deployable>
                            </deployables>
                            <configuration>
                                <properties>
                                    <cargo.jvmargs>
                                        -javaagent:${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco.version}/org.jacoco.agent-${jacoco.version}-runtime.jar=destfile=${project.build.directory}/coverage-reports/jacoco-st.exec,append=true
                                    </cargo.jvmargs>
                                </properties>
                                <home>${project.build.directory}/tomcat</home>
                                <type>standalone</type>
                            </configuration>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start-tomcat</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-tomcat</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven-compiler-plugin.version}</version>
                        <configuration>
                            <source>${maven.compiler.source}</source>
                            <target>${maven.compiler.target}</target>
                            <debug>true</debug>
                            <debuglevel>lines,vars,source</debuglevel>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${maven-war-plugin.version}</version>
                        <configuration>
                            <warName>${project.artifactId}-system_test</warName>
                            <webResources>
                                <resource>
                                    <directory>${project.basedir}/src/test/resources/WEB-INF</directory>
                                    <targetPath>/WEB-INF/</targetPath>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>



                    <plugin>
                        <!-- Measure coverage for system tests -->
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.version}</version>
                        <executions>
                            <execution>
                                <id>post-system-test</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${project.build.directory}/coverage-reports/jacoco-st.exec</dataFile>
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-st</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!--
            A profile for load tests.
            -->
            <id>load-tests</id>

            <build>
                <directory>${BUILD_DIRECTORY}</directory>

                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${maven-war-plugin.version}</version>
                        <configuration>
                            <warName>${project.artifactId}-${project.version}-load_test</warName>
                            <webResources>
                                <resource>
                                    <directory>${project.basedir}/src/test/resources/load_tests/WEB-INF</directory>
                                    <targetPath>/WEB-INF/</targetPath>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>

                    <plugin>
                        <!-- The failsafe plugin does similar to surefire but for system tests -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven-failsafe-plugin.version}</version>
                        <configuration>
                            <environmentVariables>
                                <!--suppress UnresolvedMavenProperty -->
                                <SYSTEM_TEST_BROWSER>${SYSTEM_TEST_BROWSER}</SYSTEM_TEST_BROWSER>
                                <!--suppress UnresolvedMavenProperty -->
                                <PROCESS_ID>${PROCESS_ID}</PROCESS_ID>
                                <!--suppress UnresolvedMavenProperty -->
                                <SERVER_URL>${SERVER_URL}</SERVER_URL>
                            </environmentVariables>
                        </configuration>
                        <executions>
                            <execution>
                                <id>load-tests</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>**/*LT.java</include>
                                    </includes>

                                    <skipTests>${skipSystemTests}</skipTests>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <argLine>${failsafeSystemTestArgLine}</argLine>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
